buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
        springCloudVersion = 'Greenwich.SR2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
        classpath "com.netflix.nebula:nebula-release-plugin:6.0.2"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
    id 'java-library'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'nebula.release'

group = 'com.github.bijukunjummen'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    api("io.projectreactor:reactor-core")
    api("io.projectreactor.netty:reactor-netty")
    api("org.springframework:spring-webflux")
    api("com.fasterxml.jackson.core:jackson-databind")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    testImplementation('io.projectreactor:reactor-test')
    implementation("org.slf4j:jcl-over-slf4j")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("com.github.tomakehurst:wiremock-standalone:2.21.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.assertj:assertj-core")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

test {
    useJUnitPlatform()
}

bintray {
    user = bintray_user
    key = bintray_api_key
    configurations = ['archives']
    pkg {
        repo = 'repo'
        name = project.name
        group = project.group
//        version = project.version
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/bijukunjummen/webclient-ecs-metadata.git'
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'webclient-ecs-metadata'
            description 'A Java library to extract AWS ECS Metadata using Spring WebClient'
            url 'https://github.com/bijukunjummen/webclient-ecs-metadata.git'
            inceptionYear '2019'

            packaging 'jar'
            groupId project.group
            artifactId project.name
            version project.version

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection 'https://github.com/bijukunjummen/webclient-ecs-metadata.git'
                url 'https://github.com/bijukunjummen/webclient-ecs-metadata.git'

            }
            developers {
                developer {
                    name 'Biju Kunjummen'
                }
            }
        }
    }
}
